{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Catgram API"
  },
  "servers": [
    {
      "url": "https://cat-gram.herokuapp.com/"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "responses": {
      "UnauthenticatedError": {
        "description": "Access token is missing or invalid"
      },
      "UnauthorisedPostActionError": {
        "description": "Access token must be generated from the author of this post."
      },
      "UnauthorisedUserActionError": {
        "description": "Access token must be generated from the same user of this action."
      }
    }
  },
  "paths": {
    "/account/signup": {
      "post": {
        "summary": "Create a user",
        "tags": [
          "account"
        ],
        "requestBody": {
          "description": "Credentials of user to be created",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "username": "jimmy",
                  "password": "password123"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User is successfully signed up.",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "user": {
                  		"bookmarked": [],
                  		"likes": [],
                  		"_id": "5b4eb484fa58ba9e76c96c66",
                  		"username": "jimmy",
                  		"salt": "...",
                  		"hash": "...",
                  		"__v": 0
	                  }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Sign up failed. Request body has missing or invalid fields."
          }
        }
      }
    },
    "/account/login": {
      "post": {
        "summary": "Log in as user and get authentication token",
        "tags": [
          "account"
        ],
        "requestBody": {
          "description": "Credentials of user ",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "username": "jimmy",
                  "password": "password123"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login success.",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "message": "Sign in success.",
                  	"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI1YjRkOGYxMzhmMWFjYzMyYjNmY2JjNzYiLCJpYXQiOjE1MzE4ODYwNjF9.tEkqP-sw7UMdMY1KkdLZbvEt23xEM2eLrwFotcQhzwK"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Login failed. Invalid or incorrect credentials."
          }
        }
      }
    },
    "/posts": {
      "get": {
        "summary": "List of all available posts",
        "tags": [
          "posts"
        ],
        "responses": {
          "200": {
            "description": "An array of posts",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "_id": "5b4d0f138f1azc32b3absc22",
                      "author": "5b4c383b6eb02e0a56534c6g",
                      "caption": "My new post",
                      "image": "https://sampleurl.com",
                  		"createdAt": "2018-07-19T13:18:32.164Z",
                  		"updatedAt": "2018-07-19T13:18:32.164Z"
                    },
                    {
                      "_id": "5b4d0f138f1acc32b3gasc76",
                      "author": "5b4c383b6eb02e0a56534c6g",
                      "caption": "My new post",
                      "image": "https://sampleurl.com",
                  		"createdAt": "2018-07-19T13:18:32.164Z",
                  		"updatedAt": "2018-07-19T13:18:32.164Z"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a post as the currently authenticated user",
        "tags": [
          "posts"
        ],
        "security": [
          { "bearerAuth": [] }
        ],
        "requestBody": {
          "description": "Post object to be added",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "caption": "My new post",
                  "image": "https://sampleurl.com"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Post created successfully and returned in the repsonse.",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "likes": "1",
                		"_id": "5b4d0f138f1acc32b3gasc76",
                    "author": "5b4c383b6eb02e0a56534c6g",
                    "caption": "My new post",
                    "image": "https://sampleurl.com",
                		"createdAt": "2018-07-19T13:18:32.164Z",
                		"updatedAt": "2018-07-19T13:18:32.164Z"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request body is not a valid Post object - some fields are missing/invalid."
          },
          "401": {
            "$ref": "#/components/responses/UnauthenticatedError"
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "List of all users",
        "tags": [
          "users"
        ],
        "responses": {
          "200": {
            "description": "An array of users",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "bookmarked": [],
                  		"likes": [],
                  		"_id": "5b4d8f138f1acc32b3fcbc76",
                  		"username": "jimmy",
                  		"salt": "...",
                  		"hash": "...",
                  		"__v": 0,
                  		"bio": "My bio!",
                  		"posts": []
                    },
                    {
                      "bookmarked": [],
                  		"likes": [],
                  		"_id": "5b4d0f138f1acc32b3gasc76",
                  		"username": "tom",
                  		"salt": "...",
                  		"hash": "...",
                  		"__v": 0,
                  		"bio": "Hi I'm Tom!",
                  		"posts": []
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}": {
      "get": {
        "summary": "Retrieve a user of that id",
        "tags": [
          "users"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "description": "The id of the user to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User object with the given id",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "bookmarked": [],
                		"likes": [],
                		"_id": "5b4d0f138f1acc32b3gasc76",
                		"username": "tom",
                		"salt": "...",
                		"hash": "...",
                		"__v": 0,
                		"bio": "Hi I'm Tom!",
                		"posts": []
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "message": "Cannot find user with this id!"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Invalid user id parameter"
          }
        }
      },
      "put": {
        "summary": "Update a user object of that id ",
        "tags": [
          "users"
        ],
        "security": [
          { "bearerAuth": [] }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "description": "The id of the user to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "$ref": "#/components/responses/UnauthenticatedError"
          },
          "403": {
            "$ref": "#/components/responses/UnauthorisedUserActionError"
          }
        }
      },
      "delete": {
        "summary": "Delete a user object of that id",
        "tags": [
          "users"
        ],
        "security": [
          { "bearerAuth": [] }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "description": "The id of the user to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the specified user"
          },
          "401": {
            "$ref": "#/components/responses/UnauthenticatedError"
          },
          "403": {
            "$ref": "#/components/responses/UnauthorisedUserActionError"
          }
        }
      }
    },
    "/likes/likePost": {
      "post": {
        "summary": "Add a specified post to the specified user's liked list, and increment the like counter of the post.",
        "tags": [
          "likes"
        ],
        "security": [
          { "bearerAuth": [] }
        ],
        "requestBody": {
          "description": "postId - ID of the post to be liked ; userID - ID of the user liking this post",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "postId": "5b4d0f138f1acc32b3gasc76",
                  "userId": "5b4c383b6eb02e0a56534c6g"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Post object with the updated counter",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "likes": "32",
                		"_id": "5b4d0f138f1acc32b3gasc76",
                		"author": "{ ... }",
                		"caption": "Hello im a test post",
                		"image": "https://sampleurl.com",
                		"createdAt": "2018-07-19T13:18:32.164Z",
                		"updatedAt": "2018-07-19T13:18:32.164Z"
                  }
                }
              }
            }
          },
          "400": {
            "description": "User has already liked the specified post before"
          },
          "401": {
            "$ref": "#/components/responses/UnauthenticatedError"
          },
          "404": {
            "description": "Post not found"
          }
        }
      }
    },
    "/likes/unlikePost": {
      "post": {
        "summary": "Remove a specified post from the specified user's liked list, and decrement the like counter of the post.",
        "tags": [
          "likes"
        ],
        "security": [
          { "bearerAuth": [] }
        ],
        "requestBody": {
          "description": "postId - ID of the post to be unliked ; userID - ID of the user unliking this post",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "postId": "5b4d0f138f1acc32b3gasc76",
                  "userId": "5b4c383b6eb02e0a56534c6g"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Post object with the updated counter",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "likes": "31",
                		"_id": "5b4d0f138f1acc32b3gasc76",
                		"author": "{ ... }",
                		"caption": "Hello im a test post",
                		"image": "https://sampleurl.com",
                		"createdAt": "2018-07-19T13:18:32.164Z",
                		"updatedAt": "2018-07-19T13:18:32.164Z"
                  }
                }
              }
            }
          },
          "400": {
            "description": "User has not liked the specified post before" 
          },
          "401": {
            "$ref": "#/components/responses/UnauthenticatedError"
          },
          "404": {
            "description": "Post not found"
          }
        }
      }
    },
    "/bookmarks/addToBookmark": {
      "post": {
        "summary": "Add a specified post to the specified user's bookmark list",
        "tags": [
          "bookmarks"
        ],
        "security": [
          { "bearerAuth": [] }
        ],
        "requestBody": {
          "description": "postId - ID of the post to be bookmarked ; userID - ID of the user bookmarking this post",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "postId": "5b4d0f138f1acc32b3gasc76",
                  "userId": "5b4c383b6eb02e0a56534c6g"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User object with the updated bookmark list",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "bookmarked": ["5b4d0f138f1acc32b3gasc76"],
                		"likes": [],
                		"_id": "5b4c383b6eb02e0a56534c6g",
                		"username": "tom",
                		"salt": "...",
                		"hash": "...",
                		"bio": "Hi I'm Tom!",
                		"posts": []
                  }
                }
              }
            }
          },
          "400": {
            "description": "User has already bookmarked the specified post before"
          },
          "401": {
            "$ref": "#/components/responses/UnauthenticatedError"
          },
          "404": {
            "description": "Post not found"
          }
        }
      }
    },
    "/bookmarks/removeFromBookmark": {
      "post": {
        "summary": "Remove a specified post from the specified user's bookmark list",
        "tags": [
          "bookmarks"
        ],
        "security": [
          { "bearerAuth": [] }
        ],
        "requestBody": {
          "description": "postId - ID of the post to be un-bookmarked ; userID - ID of the user doing this",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "postId": "5b4d0f138f1acc32b3gasc76",
                  "userId": "5b4c383b6eb02e0a56534c6g"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Post object with the updated counter",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "bookmarked": [],
                		"likes": [],
                		"_id": "5b4c383b6eb02e0a56534c6g",
                		"username": "tom",
                		"salt": "...",
                		"hash": "...",
                		"bio": "Hi I'm Tom!",
                		"posts": []
                  }
                }
              }
            }
          },
          "400": {
            "description": "User has not bookmarked the specified post before" 
          },
          "401": {
            "$ref": "#/components/responses/UnauthenticatedError"
          },
          "404": {
            "description": "Post not found"
          }
        }
      }
    },
    "/posts/{post_id}": {
      "get": {
        "summary": "Retrieve a post of that id ",
        "tags": [
          "posts"
        ],
        "parameters": [
          {
            "name": "post_id",
            "in": "path",
            "required": true,
            "description": "The id of the post to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Post object of the given id",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "author": "5b4c383b6eb02e0a56534c6g",
                    "caption": "My Cheesy Caption",
                    "image": "https://sampleurl.com"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Post not found",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "message": "Cannot find post with this id!"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Invalid post id parameter"
          }
        }
      },
      "put": {
        "summary": "Update post with the specified id",
        "tags": [
          "posts"
        ],
        "security": [
          { "bearerAuth": [] }
        ],
        "parameters": [
          {
            "name": "post_id",
            "in": "path",
            "required": true,
            "description": "The id of the post to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated fields for post",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "caption": "Newly updated caption!"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Post object with the updated fields",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "author": "5b4c383b6eb02e0a56534c6g",
                    "caption": "Newly Updated caption!",
                    "image": "https://sampleurl.com"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthenticatedError"
          },
          "403": {
            "$ref": "#/components/responses/UnauthorisedPostActionError"
          },
          "404": {
            "description": "Post not found"
          },
           "500": {
            "description": "Invalid post id parameter"
          }
        }
      },
      "delete": {
        "summary": "Delete post with the specified id",
        "tags": [
          "posts"
        ],
        "security": [
          { "bearerAuth": [] }
        ],
        "parameters": [
          {
            "name": "post_id",
            "in": "path",
            "required": true,
            "description": "The id of the post to be deleted",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Post is successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "message": "Successfully deleted post with ID 5b4c383b6eb02e0a56534c6e"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthenticatedError"
          },
          "403": {
            "$ref": "#/components/responses/UnauthorisedPostActionError"
          },
          "404": {
            "description": "Post not found"
          },
           "500": {
            "description": "Invalid post id parameter"
          }
        }
      }
    }
  }
}